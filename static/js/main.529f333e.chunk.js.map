{"version":3,"sources":["Store.js","constants/data.js","components/Navbar/index.js","components/Home/index.js","components/Cart/index.js","components/AppRouter/index.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","ContextProvider","Provider","Consumer","products","id","name","details","price","imageUrl","cartContext","useContext","className","to","style","fontSize","textDecoration","position","top","right","borderRadius","background","padding","color","data","filter","product","addedToCart","length","handleCartUpdate","proctsState","map","updateData","index","key","src","height","width","alt","onClick","disabled","flex","basename","process","Navbar","path","Cart","Home","App","useState","setContextData","contextData","value","AppRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.529f333e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({});\r\n\r\nexport const ContextProvider = AppContext.Provider\r\nexport const ContextConsumer = AppContext.Consumer\r\nexport default AppContext","export const products = [\r\n    {\r\n        id: 1,\r\n        name: \"Sony 108 cm (43 Inches) Full HD\",\r\n        details: \"Sony 108 cm (43 Inches) Full HD Certified Android Smart LED TV KDL-43W800F (Black) (2018 model)\",\r\n        price: \"₹ 66,900.00\",\r\n        imageUrl: \"./assets/images/1.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Fujifilm Instax Mini 9\",\r\n        details: \"Fujifilm Instax Mini 9 Instant Camera (Ice Blue)\",\r\n        price: \"₹ 5,530.00\",\r\n        imageUrl: \"./assets/images/2.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Apple Watch Series 5\",\r\n        details: \"Apple Watch Series 5 (GPS + Cellular, 44mm) - Space Gray Aluminium Case with Black Sport Band\",\r\n        price: \"₹ 52,900.00\",\r\n        imageUrl: \"./assets/images/3.jpg\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Apple iPhone 11\",\r\n        details: \"Apple iPhone 11 (64GB) - (Product) RED\",\r\n        price: \"₹ 64,900.00\",\r\n        imageUrl: \"./assets/images/4.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Echo Input\",\r\n        details: \"Echo Input Portable Smart Speaker Edition - Carry Echo anywhere in your home\",\r\n        price: \"₹ 5,999.00\",\r\n        imageUrl: \"./assets/images/5.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Saregama Carvaan\",\r\n        details: \"Saregama Carvaan 6 W Bluetooth Home Audio Speaker, SC04 (Porcelain White, Stereo Channel)\",\r\n        price: \"₹ 5,990.00\",\r\n        imageUrl: \"./assets/images/6.jpg\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Bosch 7 kg Fully-Automatic\",\r\n        details: \"Bosch 7 kg Fully-Automatic Front Loading Washing Machine (WAK24268IN, silver/grey, Inbuilt Heater)\",\r\n        price: \"₹ 37,500.00\",\r\n        imageUrl: \"./assets/images/7.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"ASUS TUF FX505DY-BQ002T\",\r\n        details: \"ASUS TUF FX505DY-BQ002T 15.6-inch FHD Gaming Laptop (AMD Ryzen 5-3550H/8GB/1TB HDD/Windows 10/Radeon RX 560X 4GB Graphics/2.20 Kg), Black\",\r\n        price: \"₹ 68,990.00\",\r\n        imageUrl: \"./assets/images/8.jpg\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"AMUL ALMONDO\",\r\n        details: \"AMUL ALMONDO Pack of 3\",\r\n        price: \"₹ 600.00\",\r\n        imageUrl: \"./assets/images/9.jpg\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Ganesha Painting\",\r\n        details: \"SAF Special Effect Textured Ganesha Painting (SANFO89, 30 cm x 3 cm x 30 cm)\",\r\n        price: \"₹ 999.00\",\r\n        imageUrl: \"./assets/images/10.jpg\"\r\n    }\r\n];","import React, { useContext } from \"react\";\r\nimport AppContext from \"../../Store\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const cartContext = useContext(AppContext);\r\n\r\n  return (\r\n    <nav className=\"navbar sticky-top navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\"><strong>ReactAmazon</strong><sup style={{fontSize:14}}><i>(a React Context example)</i></sup></Link>\r\n      <div className=\"justify-content-end\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\r\n              <i className=\"fas fa-shopping-cart\" style={{ fontSize: 22 }}></i>\r\n              <span className=\"ml-1\" style={{ position: 'absolute', top: 5, right: 10, borderRadius: '50px', background: 'red', padding: '2px 5px', color: '#fff', fontSize: 10 }}>{cartContext.data.products.filter(product => product.addedToCart).length}</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\"\r\nimport AppContext from \"../../Store\"\r\n\r\nexport default () => {\r\n    const cartContext = useContext(AppContext);\r\n\r\n    const handleCartUpdate = (id) => {\r\n        const proctsState = cartContext.data.products.map(product => ({ ...product, addedToCart: (product.id === id ? !product.addedToCart : product.addedToCart) }));\r\n        cartContext.updateData({ products: proctsState });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                cartContext.data.products.map((product, index) =>\r\n                    <div className=\"col-12 col-md-3 p-2\" key={index}>\r\n                        <div className=\"card p-2\">\r\n                            <img src={product.imageUrl} height={200} width={200} className=\"card-img-top\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{product.name}</h5>\r\n                                <p className=\"card-text\">{product.details}</p>\r\n                                <p className=\"text-primary font-weight-bold\">{product.price}</p>\r\n                                {\r\n                                    product.addedToCart ? <button className=\"btn btn-warning\" onClick={() => handleCartUpdate(product.id)}>Remove from cart</button>\r\n                                        : <button className=\"btn btn-success\" disabled={product.addedToCart} onClick={() => handleCartUpdate(product.id)}>Add to cart</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\"\r\nimport AppContext from \"../../Store\"\r\n\r\nexport default () => {\r\n    const cartContext = useContext(AppContext);\r\n\r\n    const handleCartUpdate = (id) => {\r\n        const proctsState = cartContext.data.products.map(product => ({ ...product, addedToCart: (product.id === id ? !product.addedToCart : product.addedToCart) }));\r\n        cartContext.updateData({ products: proctsState });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                cartContext.data.products.filter(product => product.addedToCart).length ?\r\n                    cartContext.data.products.map((product, index) =>\r\n                        product.addedToCart &&\r\n                        <div className=\"col-12 col-md-3 p-2\" key={index}>\r\n                            <div className=\"card p-2\">\r\n                                <img src={product.imageUrl} height={200} width={200} className=\"card-img-top\" alt=\"...\" />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{product.name}</h5>\r\n                                    <p className=\"card-text\">{product.details}</p>\r\n                                    <p className=\"text-primary font-weight-bold\">{product.price}</p>\r\n                                    <button className=\"btn btn-warning\" onClick={() => handleCartUpdate(product.id)}>Remove from cart</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    <h3 className=\"text-center m-5\" style={{ flex: 1 }}>Cart is empty, please add some items to your cart.</h3>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from '../Navbar';\r\nimport Home from \"../Home\";\r\nimport Cart from \"../Cart\"\r\n\r\nexport default () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/cart\">\r\n            <Cart />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\nimport { ContextProvider } from \"./Store\"\nimport { products } from \"./constants/data\"\n\nimport AppRouter from './components/AppRouter';\n\nfunction App() {\n\tconst [contextData, setContextData] = useState({\n\t\tdata: {\n\t\t\tproducts: products.map(product => ({ ...product, addedToCart: false }))\n\t\t},\n\t\tupdateData: data => setContextData({ ...contextData, data: data })\n\t});\n\n\treturn (\n\t\t<ContextProvider value={contextData}>\n\t\t\t<AppRouter />\n\t\t</ContextProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}